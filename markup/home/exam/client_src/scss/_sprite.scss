/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-left-name: 'arrow-left';
$arrow-left-x: 0px;
$arrow-left-y: 0px;
$arrow-left-offset-x: 0px;
$arrow-left-offset-y: 0px;
$arrow-left-width: 30px;
$arrow-left-height: 56px;
$arrow-left-total-width: 79px;
$arrow-left-total-height: 73px;
$arrow-left-image: '../img/sprite.png';
$arrow-left: (0px, 0px, 0px, 0px, 30px, 56px, 79px, 73px, '../img/sprite.png', 'arrow-left', );
$arrow-right-name: 'arrow-right';
$arrow-right-x: 31px;
$arrow-right-y: 0px;
$arrow-right-offset-x: -31px;
$arrow-right-offset-y: 0px;
$arrow-right-width: 30px;
$arrow-right-height: 56px;
$arrow-right-total-width: 79px;
$arrow-right-total-height: 73px;
$arrow-right-image: '../img/sprite.png';
$arrow-right: (31px, 0px, -31px, 0px, 30px, 56px, 79px, 73px, '../img/sprite.png', 'arrow-right', );
$bottle-name: 'bottle';
$bottle-x: 0px;
$bottle-y: 57px;
$bottle-offset-x: 0px;
$bottle-offset-y: -57px;
$bottle-width: 13px;
$bottle-height: 16px;
$bottle-total-width: 79px;
$bottle-total-height: 73px;
$bottle-image: '../img/sprite.png';
$bottle: (0px, 57px, 0px, -57px, 13px, 16px, 79px, 73px, '../img/sprite.png', 'bottle', );
$cup-name: 'cup';
$cup-x: 62px;
$cup-y: 0px;
$cup-offset-x: -62px;
$cup-offset-y: 0px;
$cup-width: 17px;
$cup-height: 17px;
$cup-total-width: 79px;
$cup-total-height: 73px;
$cup-image: '../img/sprite.png';
$cup: (62px, 0px, -62px, 0px, 17px, 17px, 79px, 73px, '../img/sprite.png', 'cup', );
$plane-name: 'plane';
$plane-x: 62px;
$plane-y: 36px;
$plane-offset-x: -62px;
$plane-offset-y: -36px;
$plane-width: 17px;
$plane-height: 16px;
$plane-total-width: 79px;
$plane-total-height: 73px;
$plane-image: '../img/sprite.png';
$plane: (62px, 36px, -62px, -36px, 17px, 16px, 79px, 73px, '../img/sprite.png', 'plane', );
$tv-name: 'tv';
$tv-x: 62px;
$tv-y: 18px;
$tv-offset-x: -62px;
$tv-offset-y: -18px;
$tv-width: 17px;
$tv-height: 17px;
$tv-total-width: 79px;
$tv-total-height: 73px;
$tv-image: '../img/sprite.png';
$tv: (62px, 18px, -62px, -18px, 17px, 17px, 79px, 73px, '../img/sprite.png', 'tv', );
$spritesheet-width: 79px;
$spritesheet-height: 73px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($arrow-left, $arrow-right, $bottle, $cup, $plane, $tv, );
$spritesheet: (79px, 73px, '../img/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}